/* Dependencies (ASM Hacks) */
import "_scripts/asm/asm_code.ccs"
import "_scripts/asm/asm_controls.ccs"
import "_scripts/asm/expand_flags.ccs"
import "_scripts/asm/expand_text_windows.ccs"
import "_scripts/asm/Title_Window.ccs"
//import "_scripts/asm/custom_windows_at_runtime.ccs"
import "_scripts/asm/custom_windows_standalone.ccs"
//import "_scripts/asm/switch_text_windows.ccs"
import "_scripts/asm/movement_reloc.ccs"
import "_scripts/asm/asm65816_2.ccs"
/* EarthBound++ */
//import "_scripts/asm/ebpp.ccs"
//import "_scripts/asm/ebpp_std.ccs"
//import "_scripts/asm/ebpp_mem.ccs"
//import "_scripts/asm/EBPP_Disassembly_HardwareCompatible_v1_1.ccs"
/* Quality of Life improvements from CCScript Library */
//import "_scripts/asm/optimize_text_render_3.ccs" // Issue: overwrites 1st line in main text window
import "_scripts/asm/noclip.ccs"
import "_scripts/asm/mute_music.ccs"
import "_scripts/asm/fix_oss_gameover.ccs"
import "_scripts/asm/fix_teleport_hardlock.ccs"
import "_scripts/asm/teleport_anywhere.ccs"
import "_scripts/asm/y_mash.ccs"
import "_scripts/asm/dead_can_use_items.ccs"
//import "_scripts/asm/New_Stats_Window.ccs" (too laggy)
import "_scripts/asm/fast_doors.ccs"
import "_scripts/asm/easy_deaths.ccs"
import "_scripts/asm/run_button_toggleable.ccs"
import "_scripts/asm/repel_sandwiches.ccs"
/* import "_scripts/asm/run_accelerating.ccs" */
/* import "_scripts/asm/GoodsMenuEquip.ccs" */
/* Enums */
import "_scripts/modmenu/modmenu.ccs"
import "_scripts/modmenu/goods/goodsmenu.ccs"
/* Enums */
import "_scripts/enums/flags.ccs"
import "_scripts/enums/items.ccs"
import "_scripts/enums/labels.ccs"
import "_scripts/enums/bgm.ccs"
import "_scripts/enums/party.ccs"
import "_scripts/enums/windows.ccs"
/* Commands */
import "_scripts/commands/window_cmds.ccs"
import "_scripts/commands/flag_cmds.ccs"
import "_scripts/commands/health_cmds.ccs"
/* Main Menu Override */
import "_scripts/mainmenu/mainmenu.ccs"
import "_scripts/mainmenu/chaosmode.ccs"
/* Sans Text Blip Noise */
import "_scripts/asm/sans.ccs"
import "_scripts/asm/text_blip_replace.ccs"

// Open the Mod Menu
ModMenu:
	goto(ModMenu)
	
// Show information about the Mod Menu (item help text)
ModMenu_About:
	goto(ModMenu_AboutDlg)
	
// Temporarily remove party if using unrestricted bike feature
BicycleStart:
	set(flg_EndLoop)
	window_closeall
	if flag flg_UnrestrictBike
	{
		TempSoloPartyMember(pty_Ness)
		set(flg_RidingBike)
		"[1F F0]"
	}
    else if flg_BikeCantNormallyBeUsed { window_open(1) "@The bike cannot be used right now." unset(flg_BikeCantNormallyBeUsed) end }
	else { "[1F F0]" }
eob

// Restore party if using unrestricted bike feature
BicycleEnd:
	if flag flg_UnrestrictBike
	{
		RestorePartyFromFlags()
        unset(flg_RidingBike)
    }
	window_closeall
eob

// Prevent your dad from calling you
DadCall:
	if not flg_ChaosMode { eob } //goto(data_32.l_0xc7d33e_original) }
	else
	{
		goto(chaosmode.ChaosMode)
	}
eob

// Prevent Photo Guy cutscene from happening
ROM[0xC7AB3F] = goto(PhotoGuy) // coilsnake didn't decompile it right...

command e(label) "{long label}"

PhotoGuy:
	if flg_NoPhotoGuy { "[1F 15 6A 00 C4 01 01]{music(88)}{music_stop}[1F EB 01 06][06 FD 01 {e(data_31.l_0xc7ac3a)}][1F 15 0E 00 C2 01 01]{pause(32)}[1F 61][1F 1F 0E 00 06][1F EC 01 01][1F EA 8F 00]{music_resume}" }
	else {
		call(data_33.l_0xc7dd74) "{music(88)}{pause(180)}{pause(60)}[1F 15 8F 00 C0 01 01][1F 61][1F 15 58 01 C1 01 01][1F 61][1F E7 8F 00][19 10 01][19 22 00 03 8F 00][1F 14 00]{window_open(1)}[1F 41 12]@Pictures taken instantaneously!" next
		"@I'm a photographic genius,{pause(15)}" linebreak
		"  if I do say so myself!" next
		"@Okay,{pause(15)} get ready for an instant memory!" next
		"@Look at the camera...{pause(20)}" linebreak
		"  Ready..." next
		"@Say,{pause(15)} <fuzzy pickles.>" next
		"{window_closeall}[1F EB 01 06][06 FD 01 {e(data_31.l_0xc7ac3a)}][1F 15 0E 00 C2 01 01]"
		goto(data_31.l_0xc7ac42)
	}
eob

ShortDadCall:
	"@Would you like to save your game?" newline
	menu
	{
		"Yes": { save "@All done." newline "@I have created a record of your adventure to this point." next }
		default "No": { }
	}
	"@Good luck out there!" newline
	goto(data_17.l_0xc634ea)
eob


on_refresh(MapReload)

MapReload:
{
	// Spawn Buzz Buzz sprite if he's in party
	if flag flg_BuzzBuzz { call(0xC5EA35) }
	// Non-leader party members unconscious after continue
	if not flag flg_EasyDeaths 
	{ 
		if flag flg_GameOverContinue 
		{
			call(NotEasyDeaths)
		}
		unset(flg_GameOverContinue)
	}
	window_closeall
	if flag flg_ChaosMode and flag flg_DisableChaosEffect_RandomDoors and flag flg_RandomWarp
    {
        // Load a random map
        unset(flg_RandomWarp)
        call(chaosmode.RandomWarp)
    }
	eob
}

NotEasyDeaths: 
{
	if flg_Ness
	{
		if flg_Paula { inflict(pty_Paula, 0x201) }
		if flg_Jeff  { inflict(pty_Jeff, 0x201) }
		if flg_Poo   { inflict(pty_Poo, 0x201) }
	}
	else if flg_Paula
	{
		if flg_Ness { inflict(pty_Ness, 0x201) }
		if flg_Jeff { inflict(pty_Jeff, 0x201) }
		if flg_Poo  { inflict(pty_Poo, 0x201) }
	}
	else if flg_Jeff
	{
		if flg_Ness  { inflict(pty_Ness, 0x201) }
		if flg_Paula { inflict(pty_Paula, 0x201) }
		if flg_Poo   { inflict(pty_Poo, 0x201) }
	}
	else if flg_Poo
	{
		if flg_Ness  { inflict(pty_Ness, 0x201) }
		if flg_Paula { inflict(pty_Paula, 0x201) }
		if flg_Jeff  { inflict(pty_Jeff, 0x201) }
	}
}

threedtent:
	// Set screen reload pointer.
	"[1F 63 {long threedtentafterdoor}]"
eob

threedtentafterdoor:
	if flag flg_KeyItems and flag flg_KeyItem_ZombiePaper and not flag flg_ZombiePaperOnFloor and not flag flg_ZombiePaperUsed and not flag flg_Defeat_MasterBelch
	{ 
		"[1F E5 FF]" // Locks player movement until an eob
		window_open(1) call(data_55.l_0xc9fc48) window_close(1) 
	}
eob