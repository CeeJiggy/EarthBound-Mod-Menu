import window_cmds
import "../enums/labels.ccs"
import "../enums/party.ccs"
import "../enums/windows.ccs"
import "../enums/status.ccs"

// Clear a party member's status effects
command ClearStatus(partyMember) 
{ 
	inflict(partyMember, sts_Normal_0) inflict(partyMember, sts_Normal_1) inflict(partyMember, sts_Normal_2) 
	inflict(partyMember, sts_Normal_3) inflict(partyMember, sts_Normal_4) inflict(partyMember, sts_Normal_5)
}
// Show message about status effect being cleared
command ClearStatusNotification(string) { NotificationWnd(wnd_ModMenu2, "{sound(SND_STATUSRECOVER)}@Cleared {string)}'s status.") }

// Give a party member 1 HP and set their primary status to Normal
command Revive(partyMember) { heal(partyMember, 1) inflict(partyMember, sts_Normal_0) }
// Show message about party member being revived
command ReviveNotification(string) { NotificationWnd(wnd_ModMenu2, "{sound(SND_STATUSRECOVER)}@Revived {string)}.") }

// Remove 100% of a party member's HP
command Kill(partyMember) { sound(SND_HERODEATH) hurt_percent(partyMember, 100) }
// Remove 99% of a party member's HP
command AlmostKill(partyMember) { sound(SND_CRITICAL) hurt_percent(partyMember, 100) heal(partyMember, 1) }

// Give a party member a status effect
command InflictNotification(partyName, statusName) { NotificationWnd(wnd_ModMenu, "{sound(SND_AFFLICTED)}@Inflicted {partyName} with {statusName}.") }
// Give the entire party a status effect
command InflictParty(status, statusName)
{
	if (counter_is(0))
	{ 
		inflict(pty_Ness, status) inflict(pty_Paula, status) 
		inflict(pty_Jeff, status) inflict(pty_Poo, status) 
		InflictNotification("party", statusName) 
	}
	else if (counter_is(pty_Ness))  { inflict(pty_Ness, status)  InflictNotification(name(pty_Ness),  statusName) }
	else if (counter_is(pty_Paula)) { inflict(pty_Paula, status) InflictNotification(name(pty_Paula), statusName) }
	else if (counter_is(pty_Jeff))  { inflict(pty_Jeff, status)  InflictNotification(name(pty_Jeff),  statusName) }
	else if (counter_is(pty_Poo))   { inflict(pty_Poo, status)   InflictNotification(name(pty_Poo),   statusName) }
}