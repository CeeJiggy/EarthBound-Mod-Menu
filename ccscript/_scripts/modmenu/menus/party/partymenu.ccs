/* Mod Menu */
import "../../enums/flags.ccs"
import "../../enums/labels.ccs"
import "../../enums/party.ccs"
import "../../enums/status.ccs"
import "../../enums/windows.ccs"
import "../../commands.ccs"


PartyMenu:
	ResetCounter()
	CloseAllModMenuWnd()
	OpenModMenuWnd()
	Lbl(lbl_Party)
	menu 1 {
		"All": { goto(PartyMenu_All) }
		"Ness":  { counter(pty_Ness) goto(PartyMenu_Main4) }
		"Paula": { counter(pty_Paula) goto(PartyMenu_Main4) }
		"Jeff":  { counter(pty_Jeff) goto(PartyMenu_Main4) }
		"Poo":   { counter(pty_Poo) goto(PartyMenu_Main4) }
		"Followers": { goto(PartyMenu_Followers) }
		default "Back": { goto(modmenu.ModMenu_MainMenu) }
	}
goto(PartyMenu)


PartyMenu_Followers:
	ResetCounter()
	CloseModMenu2Wnd()
	OpenModMenuWnd()
	Lbl(lbl_Party)
	menu 1 {
		"Pokey": { counter(pty_Pokey) goto(FollowersMenu) }
		"Picky": { counter(pty_Picky) goto(FollowersMenu) }
		"King":  { counter(pty_King) goto(FollowersMenu) }
		"Tony":  { counter(pty_Tony) goto(FollowersMenu) }
		"Bubble Monkey": { counter(pty_BubbleMonkey) goto(FollowersMenu) }
		"Dungeon Man":   { counter(pty_BrickRoad) goto(FollowersMenu) }
		"Flying Man":    { counter(pty_FlyingMan) goto(FollowersMenu) }
		"Teddy Bear":    { counter(pty_TeddyBear) goto(FollowersMenu) }
		"Plush Bear": { counter(pty_PlushBear) goto(FollowersMenu) }
		default "Back": { goto(PartyMenu) }
		}
goto(PartyMenu_Followers)


command AddToParty() 
{
	if counter_is(pty_Ness)       { set(flg_Ness)  }
	else if counter_is(pty_Paula) { set(flg_Paula) }
	else if counter_is(pty_Jeff)  { set(flg_Jeff)  }
	else if counter_is(pty_Poo)   { set(flg_Poo)   }

	RefreshScreen(wnd_ModMenu) 
	party_add(0)
	SystemWnd(wnd_ModMenu, "{music(0x7B)}@{name(argument)} joined the party.{pause(90)}{music_resume}.") 
}

command RemoveFromParty() 
{
	DebugWnd(wnd_ModMenu, "RemoveFromParty")
	// Check if you can remove from party without causing death loop
	set(flg_Proceed)
	if counter_is(pty_Ness)
	{
		if not flg_Paula and not flg_Jeff and not flg_Poo { unset(flg_Proceed) }
		else { unset(flg_Ness) }
	}
	else if counter_is(pty_Paula)
	{
		if not flg_Ness and not flg_Jeff and not flg_Poo { unset(flg_Proceed) }
		else { unset(flg_Paula) }
	}
	else if counter_is(pty_Jeff)
	{
		if not flg_Ness and not flg_Paula and not flg_Poo { unset(flg_Proceed) }
		else { unset(flg_Jeff) }
	}
	else if counter_is(pty_Poo)
	{
		if not flg_Ness and not flg_Paula and not flg_Jeff { unset(flg_Proceed) }
		else { unset(flg_Poo) }
	}
	DebugWnd(wnd_ModMenu, "RemoveFromParty2")
	if flg_Proceed
	{
		party_remove(0)
		RefreshScreen(wnd_ModMenu) 
		SystemWnd(wnd_ModMenu, "{sound(SND_STATUSCHANGE)}@{name(argument)} left the party.")
	}
	else { SystemWnd(wnd_ModMenu, "@Couldn't remove {name(argument)} from party.") }
}


PartyMenu_All:
	CloseModMenu2Wnd()
	OpenModMenuWnd()
	Lbl(lbl_Party)
	menu 1 {
		"Health": { goto(HealthMenu) }
		//"Stats":  { goto(StatsMenu) }
		//"Goods":  { goto(GoodsMenu) }
		//"EXP":    { goto(EXPMenu) }
		//"PSI":    { goto(PSIMenu) }
		"Add":    
		{ 
			party_add(pty_Ness)  set(flg_Ness)
			party_add(pty_Paula) set(flg_Paula)
			party_add(pty_Jeff)  set(flg_Jeff)
			party_add(pty_Poo)   set(flg_Poo)
			RefreshScreen(wnd_ModMenu)
			SystemWnd(wnd_ModMenu, "{music(0x7B)}@Everyone joined the party.{pause(90)}{music_resume}") 
			goto(PartyMenu_All) 
		}
		"Remove":
		{
		}
		default "Back": { goto(PartyMenu) 
		}
	}
goto(PartyMenu)

PartyMenu_Main4:
	CloseModMenu2Wnd()
	OpenModMenuWnd()
	SetPartyLabel()
	menu 1 {
		"Health": { goto(HealthMenu) }
		//"Stats":  { goto(StatsMenu) }
		//"Goods":  { goto(GoodsMenu) }
		//"EXP":    { goto(EXPMenu) }
		//"PSI":    { goto(PSIMenu) }
		"Add":    { AddToParty() }
		"Remove": { RemoveFromParty() }
		 default "Back": { goto(PartyMenu) }
	}
goto(PartyMenu)

FollowersMenu:
	CloseModMenu2Wnd()
	OpenModMenuWnd()
	SetPartyLabel()
	menu 1 
	{
		"Add":    { AddToParty() }
		"Remove": { RemoveFromParty() }
		 default "Back": { goto(PartyMenu) }
	}
goto(PartyMenu)

// Clear a party member's status effects
command ClearStatus(partyMember) 
{ 
	inflict(partyMember, sts_Normal_0) inflict(partyMember, sts_Normal_1) inflict(partyMember, sts_Normal_2) 
	inflict(partyMember, sts_Normal_3) inflict(partyMember, sts_Normal_4) inflict(partyMember, sts_Normal_5)
}
// Show message about status effect being cleared
command ClearStatusNotification(string) { SystemWnd(wnd_ModMenu2, "{sound(SND_STATUSRECOVER)}@Cleared {string)}'s status.") }

// Give a party member 1 HP and set their primary status to Normal
command Revive(partyMember) { heal(partyMember, 1) inflict(partyMember, sts_Normal_0) }
// Show message about party member being revived
command ReviveNotification(string) { SystemWnd(wnd_ModMenu2, "{sound(SND_STATUSRECOVER)}@Revived {string)}.") }

// Remove 100% of a party member's HP
command Kill(PartyMember) { sound(SND_HERODEATH) hurt_percent(PartyMember, 100) }
// Remove 99% of a party member's HP
command AlmostKill(PartyMember) { sound(SND_CRITICAL) hurt_percent(PartyMember, 99) }

HealthMenu:
	OpenModMenu2Wnd()
	Lbl(lbl_Health)
	menu 1 {
		"Heal":  { 
			if (counter_is(0)) { healall SystemWnd(wnd_ModMenu2, "{sound(SND_RECOVER)}@Restored everyone's HP and PP.") }
			else { SystemWnd(wnd_ModMenu2, "{call(data_45.l_0xc91675)}{sound(SND_RECOVER)}@{name(argument)}'s HP and PP are restored.") LoadRAM() } 
		}
		"Set Status":  { goto(StatusMenu) }
		"Clear Status":
		{
			if (counter_is(0)) 
			{
				ClearStatus(pty_Ness) ClearStatus(pty_Paula) ClearStatus(pty_Jeff) ClearStatus(pty_Poo)
				ClearStatusNotification("everyone")
			}
			else if (counter_is(pty_Ness))  { ClearStatus(pty_Ness)  ClearStatusNotification("{name(pty_Ness)}")  }
			else if (counter_is(pty_Paula)) { ClearStatus(pty_Paula) ClearStatusNotification("{name(pty_Paula)}") }
			else if (counter_is(pty_Jeff))  { ClearStatus(pty_Jeff)  ClearStatusNotification("{name(pty_Jeff)}")  }
			else if (counter_is(pty_Poo))   { ClearStatus(pty_Poo)   ClearStatusNotification("{name(pty_Poo)}")   }
		}
		"Kill":  { 
			if (counter_is(0)) { Kill(pty_Ness) Kill(pty_Paula) Kill(pty_Jeff) Kill(pty_Poo) }
			else if (counter_is(pty_Ness))  { Kill(pty_Ness)  }
			else if (counter_is(pty_Paula)) { Kill(pty_Paula) }
			else if (counter_is(pty_Jeff))  { Kill(pty_Jeff)  }
			else if (counter_is(pty_Poo))   { Kill(pty_Poo)   }
		}
		"AlmostKill": { 
			if (counter_is(0)) { AlmostKill(pty_Ness) AlmostKill(pty_Paula) AlmostKill(pty_Jeff) AlmostKill(pty_Poo) }
			else if (counter_is(pty_Ness))  { AlmostKill(pty_Ness)  }
			else if (counter_is(pty_Paula)) { AlmostKill(pty_Paula) }
			else if (counter_is(pty_Jeff))  { AlmostKill(pty_Jeff)  }
			else if (counter_is(pty_Poo))   { AlmostKill(pty_Poo)   }
		}
		"Revive":  { 
			if (counter_is(0)) { "[08 2c 16 c9 00]" ReviveNotification("the whole party") }
			else if (counter_is(pty_Ness))  { Revive(pty_Ness)  ReviveNotification("{name(pty_Ness)}")  }
			else if (counter_is(pty_Paula)) { Revive(pty_Paula) ReviveNotification("{name(pty_Paula)}") }
			else if (counter_is(pty_Jeff))  { Revive(pty_Jeff)  ReviveNotification("{name(pty_Jeff)}")  }
			else if (counter_is(pty_Poo))   { Revive(pty_Poo)   ReviveNotification("{name(pty_Poo)}")   }
		}
		 default "Back": { goto(PartyMenu) }
	}
goto(PartyMenu)

StatusMenu:
	OpenModMenu2Wnd()
	Lbl(lbl_Status)
	menu 1 {
		"Group 0": { goto(StatusGroup_0) }
		"Group 1": { goto(StatusGroup_1) }
		"Group 2": { goto(StatusGroup_2) }
		"Group 3": { goto(StatusGroup_3) }
		"Group 4": { goto(StatusGroup_4) }
		"Group 5": { goto(StatusGroup_5) }
		 default "Back": { goto(HealthMenu) }
	}
goto(StatusMenu)

command Inflict(status, partyMember) { inflict(partyMember, status) }
command InflictNotification(partyName, statusName) { SystemWnd(wnd_ModMenu, "{sound(SND_AFFLICTED)}@Inflicted {partyName} with {statusName}.") }
command InflictParty(status, statusName) 
{
	if (counter_is(0))
	{ 
		Inflict(status, pty_Ness) Inflict(status, pty_Paula) 
		Inflict(status, pty_Jeff) Inflict(status, pty_Poo) 
		InflictNotification("party", statusName) 
	}
	else if (counter_is(pty_Ness))  { Inflict(status, pty_Ness)  InflictNotification(name(pty_Ness),  statusName) }
	else if (counter_is(pty_Paula)) { Inflict(status, pty_Paula) InflictNotification(name(pty_Paula), statusName) }
	else if (counter_is(pty_Jeff))  { Inflict(status, pty_Jeff)  InflictNotification(name(pty_Jeff),  statusName) }
	else if (counter_is(pty_Poo))   { Inflict(status, pty_Poo)   InflictNotification(name(pty_Poo),   statusName) }
}

StatusGroup_0:
	OpenModMenu2Wnd()
	Lbl(lbl_Group0)
	menu 1 {
		"Normal":   { InflictParty(sts_Normal_0, "Normal") }
		"KO'd":     { InflictParty(sts_KO, "KO'd") }
		"Diamondized": { InflictParty(sts_Diamondized, "Diamondized") }
		"Nauseous":  { InflictParty(sts_Nauseous, "Nausea") }
		"Poisoned":  { InflictParty(sts_Poisoned, "Poison") }
		"Sunstroke": { InflictParty(sts_Sunstroke, "Sunstroke") }
		"Cold":      { InflictParty(sts_Cold, "a Cold") }
		default "Back": { goto(StatusMenu) }
	}
goto(StatusGroup_0)

StatusGroup_1:
	OpenModMenu2Wnd()
	Lbl(lbl_Group1)
	menu 1 {
		"Normal": 	    { InflictParty(sts_Normal_1, "Normal") }
		"Mushroomized": { InflictParty(sts_Mushroomized, "Mushroomized") }
		"Possessed":    { sound(SND_POSSESSED) InflictParty(sts_Possessed, "Possession") }
		default "Back": { goto(StatusMenu) }
	}
goto(StatusGroup_1)

StatusGroup_2:
	OpenModMenu2Wnd()
	Lbl(lbl_Group2)
	menu 1 {
		"Normal": 	 { InflictParty(sts_Normal_2, "Normal") }
		"Asleep":    { InflictParty(sts_Asleep, "Sleep") }
		"Crying":    { InflictParty(sts_Crying, "Crying") }
		"Paralyzed": { InflictParty(sts_Paralyzed, "Paralysis") }
		"Solidified": { InflictParty(sts_Solidified, "Solidified") }
		default "Back": { goto(StatusMenu) }
	}
goto(StatusGroup_2)

StatusGroup_3:
	OpenModMenu2Wnd()
	Lbl(lbl_Group3)
	menu 1 {
		"Normal":  { InflictParty(sts_Normal_3, "Normal") }
		"Strange": { InflictParty(sts_Strange, "Feeling Strange") }
		default "Back": { goto(StatusMenu) }
	}
goto(StatusGroup_3)

StatusGroup_4:
	OpenModMenu2Wnd()
	Lbl(lbl_Group4)
	menu 1 {
		"Normal": 	    { InflictParty(sts_Normal_4, "Normal") }
		"CantConcentrate": { InflictParty(sts_CantConcentrate, "Can't Concentrate") }
		default "Back": { goto(StatusMenu) }
	}
goto(StatusGroup_4)

StatusGroup_5:
	OpenModMenu2Wnd()
	Lbl(lbl_Group5)
	menu 1 {
		"Normal": 	{ InflictParty(sts_Normal_5, "Normal") }
		"Homesick": { InflictParty(sts_Homesick, "Homesickness") }
		default "Back": { goto(StatusMenu) }
	}
goto(StatusGroup_5)