/* Mod Menu */
import "../../enums/flags.ccs"
import "../../enums/labels.ccs"
import "../../enums/items.ccs"
import "../../enums/party.ccs"
import "../../enums/windows.ccs"
import "../../commands.ccs"

GoodsMenu:
	CloseKeyItemDescWnd()
	CloseKeyItemWnd()
	CloseItemWnd() 
	CloseDebugWnd()
	CloseModMenu2Wnd()
	OpenModMenu2Wnd()
	Lbl(lbl_Goods)
	menu 1 {
		"View List": { goto(ItemList) }
		"Enter ID":  { goto(ItemID) }
		"Storage":   { goto(StorageMenu) }
		default "Back": { goto(modmenu.ModMenu) }
	}
goto(GoodsMenu)

ItemList:
	CloseModMenu2Wnd()
	CloseKeyItemWnd()
	OpenModMenu2Wnd()
	Lbl(lbl_Goods)
	menu 1 {
		"Consumables": { goto(ConsumableItemList) }
		"Equips": { goto(EquippableItemList) }
		"Passives":   { goto(PassiveItemList) }
		"Key Items":   { goto(KeyItemList) }
		default "Back": { goto(GoodsMenu) }
	}
goto(ItemList)

ConsumableItemList:
	OpenKeyItemWnd()
	Lbl(lbl_Consumables)
	menu 2 {
		"Croissant": { counter(item_Croissant) call(GiveItemID) }
		"Bag of Fries": { counter(item_Bag_Of_Fries) call(GiveItemID) }
		"Hamburger": { counter(item_Hamburger) call(GiveItemID) }
		"Double Burger": { counter(item_Burger_Double) call(GiveItemID) }
		"Bread Roll": { counter(item_Bread_Roll) call(GiveItemID) }
		"Pizza": { counter(item_Pizza) call(GiveItemID) }
		"Large Pizza": { counter(item_Pizza_Large) call(GiveItemID) }
		"PSI Caramel": { counter(item_Psi_Caramel) call(GiveItemID) }
		"Magic Truffle": { counter(item_Magic_Truffle) call(GiveItemID) }
		"Skip Sandwich DX": { counter(item_Skip_Sandwich_Dx) call(GiveItemID) }
		"Water Bottle DX": { counter(item_Water_Bottle_Dx) call(GiveItemID) }
		"Rice Gruel Bowl": { counter(item_Bowl_Rice_Gruel) call(GiveItemID) }
		"Brain Food Lunch": { counter(item_Lunch_Brain_Food) call(GiveItemID) }
		"Cup of Lifenoodles": { counter(item_Cup_Lifenoodles) call(GiveItemID) }
		default "Back": { goto(ItemList) }
	}
goto(ConsumableItemList)

PassiveItemList:
	OpenKeyItemWnd()
	Lbl(lbl_Passives)
	menu 2 {
		"Franklin Badge": { counter(item_Badge_Franklin) call(GiveItemID) }
		"Teddy Bear": { counter(item_Bear_Teddy) call(GiveItemID) }
		"Super Plush Bear": { counter(item_Bear_Super_Plush) call(GiveItemID) }
		"Brain Stone": { counter(item_Brain_Stone) call(GiveItemID) }
		"Bicycle": { counter(item_Bicycle) call(GiveItemID) }
		"ATM Card": { counter(item_Atm_Card) call(GiveItemID) }
		"Exit Mouse": { counter(item_Exit_Mouse) call(GiveItemID) }
		"Town Map": { counter(item_Town_Map) call(GiveItemID) }
		default "Back": { goto(ItemList) }
	}
goto(PassiveItemList)

KeyItemList:
	OpenKeyItemWnd()
	Lbl(lbl_Passives)
	menu 2 {
		"Sound Stone": { counter(item_Sound_Stone) call(GiveKeyItemID) call(GiveKeyItemID) }
		"Shack Key": { counter(item_Key_Shack) call(GiveKeyItemID) }
		"Bicycle": { counter(item_Bicycle) call(GiveKeyItemID) }
		"Town Map": { counter(item_Town_Map) call(GiveKeyItemID) }
		"Receiver Phone": { counter(item_Receiver_Phone) call(GiveKeyItemID) }
		"Pencil Eraser": { counter(item_Eraser_Pencil) call(GiveKeyItemID) }
		"Cabin Key": { counter(item_Wad_Bills) call(GiveKeyItemID) }
		"Wad of Bills": { counter(item_Key_Cabin) call(GiveKeyItemID) }
		"Zombie Paper": { counter(item_Zombie_Paper) call(GiveKeyItemID) }
		"Bad Key Machine": { counter(item_Bad_Key_Machine) call(GiveKeyItemID) }
		"Eraser Eraser": { counter(item_Eraser_Eraser) call(GiveKeyItemID) }
		"Diamond": { counter(item_Diamond) call(GiveKeyItemID) }
		"More...": { goto(KeyItemList2) call(GiveKeyItemID) }
		default "Back": { goto(ItemList) }
	}
goto(KeyItemList)

KeyItemList2:
	OpenKeyItemWnd()
	Lbl(lbl_Passives)
	menu 2 {
		"Signed Banana": { counter(item_Signed_Banana) call(GiveKeyItemID) }
		"Hieroglyph Copy": { counter(item_Hieroglyph_Copy) call(GiveKeyItemID) }
		"Carrot Key": { counter(item_Key_Carrot) call(GiveKeyItemID) }
		"Tower Key": { counter(item_Key_Tower) call(GiveKeyItemID) }
		"Hawk Eye": { counter(item_Hawk_Eye) call(GiveKeyItemID) }
		"Shyness Book": { counter(item_Shyness_Book) call(GiveKeyItemID) }
		"Tendakraut": { counter(item_Tendakraut) call(GiveKeyItemID) }
		"Meteorite Piece": { counter(item_Meteorite_Piece) call(GiveKeyItemID) }
		"Bubble Gum": { counter(item_Bubble_Gum) call(GiveKeyItemID) }
		"Backstage Pass": { counter(item_Pass_Backstage) call(GiveKeyItemID) }
		"Yogurt Dispenser": { counter(item_Yogurt_Dispenser) call(GiveKeyItemID) }
		"Show Ticket": { counter(item_Show_Ticket) call(GiveKeyItemID) }
		default "Back": { goto(KeyItemList) }
	}
goto(KeyItemList2)
	
EquippableItemList:
	CloseModMenu2Wnd()
	OpenModMenu2Wnd()
	Lbl(lbl_Goods)
	menu 1 {
		"Weapons":  { goto(WeaponEquipList) }
		"Armor": { goto(ArmorEquipList) }
		"Body":   { goto(BodyEquipList) }
		"Other":   { goto(OtherEquipList) }
		default "Back": { goto(ItemList) }
	}
goto(EquippableItemList)

WeaponEquipList:
goto(ItemList)

ArmorEquipList:
goto(ItemList)

BodyEquipList:
goto(ItemList)

OtherEquipList:
goto(ItemList)

StorageMenu:
	CloseModMenu2Wnd()
	OpenModMenu2Wnd()
	Lbl(lbl_Storage)
	menu 1
	{
		"Store": { goto(StoreItemMenu) }
		"Take": { goto(TakeItemMenu) }
		default "Back": { goto(GoodsMenu) }
	}
goto(StorageMenu)

command e(label) "{long label}"

StoreItemMenu:
	window_open(wnd_Dialog)
	call(data_14.l_0xc5e456)
	SaveRAM()
	if result_is(0) { window_close(wnd_Dialog) goto(StorageMenu) }
	else
	{
		LoadRAM()
		"[1D 0C 00 00]"
		if result_is(0) { LoadRAM() "{sound(118)}[1D 12 00 00]" }
	}
	window_close(wnd_Dialog)
goto(StoreItemMenu)

TakeItemMenu:
	CloseAllModMenuWnd()
	window_open(wnd_Dialog)
	"{counter(1)}[19 14][1B 02 {e(NothingStored)}][1D 03 FF][1B 02 {e(InventoryFull)}][18 02][1A 07][1B 02 {e(GoBack)}]{swap}{store_registers}[18 02]" call(data_14.l_0xc5e54a) "[1B 02 {e(GoBack)}][1B 05]{window_switch(13)}{window_closetop}{window_switch(1)}[1B 06]{sound(116)}[1D 13 00 00][19 19 00 00]"
	window_close(wnd_Dialog)
goto(TakeItemMenu)

NothingStored:
	window_close(wnd_Dialog)
	SystemWnd(wnd_Dialog, "No items are in storage.")
goto(StorageMenu)

InventoryFull:
	window_close(13)
	window_close(wnd_Dialog)
	NotifyInventoryFull()
goto(StorageMenu)

GoBack:
	window_close(13)
	window_close(wnd_Dialog)
goto(StorageMenu)

/* ID Entry */

ItemID:
	ConfirmNumber(lbl_Goods, 3, "Receive this item?", GiveItemID)
goto(GoodsMenu)

GiveItemID:
	ctoarg
	GiveItemToParty(argument) 
eob

GiveKeyItemID:
	ctoarg
	GiveKeyItemToParty(argument) 
eob