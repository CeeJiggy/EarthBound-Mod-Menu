/* Mod Menu */
import "../enums/flags.ccs"
import "../enums/labels.ccs"
import "../enums/party.ccs"
import "../enums/windows.ccs"
import "../commands.ccs"
/* Submenus */
import "party/partymenu.ccs"
import "warp/warpmenu.ccs"
import "flags/flagsmenu.ccs"
import "battle/battlemenu.ccs"
import "goods/goodsmenu.ccs"
import "music/musicmenu.ccs"
/* Commands */
import "party/health/healthcommands.ccs"
import "../../asm/cc_text_speed.ccs"
import "../../asm/movement_reloc.ccs"
import "../../asm/cc_main_menu.ccs"
import "../../asm/ccexpand.ccs"
import "../../asm/cc_asmcall.ccs"
import "../../asm/movement.ccs"
import "../../asm/asm65816_2.ccs"

// Procedures

ModMenu_MainMenu:
	goto(ModMenu)
eob

ModMenu:
	// Close unnecessary windows
	CloseAllModMenuWnd()
	window_closeall
	// Open main Mod Menu Window
	OpenModMenuWnd()
	// Set label to "MOD MENU"
	Lbl(lbl_ModMenu)
	// Pick a menu option
	menu 1 {
		"Party": { call(PartyMenu) }
		"Save":  { save SystemWnd(wnd_ModMenu, "@Game saved.") goto(ModMenu) }
		"BGM": 	 { call(MusicMenu) }
		"Warp":  { call(WarpMenu) }
		"Battle": { call(BattleMenu) }
		"Goods": { call(GoodsMenu) }
		"Flags": { call(FlagsMenu) }
		"Test":  { call(TestDlg)  }
		"Text Speed": { call(TextSpeed) goto(ModMenu) }
		default "Exit": {  }
	}
eob

ModMenu_AboutDlg:
	window_open(wnd_Dialog)
	Lbl(lbl_About)
	"@EarthBound Mod Menu by ShrineFox." newline
	"@Made using Coilsnake." newline
	"@Updated 3-6-22." wait
	window_close(wnd_Dialog)
goto(ModMenu_MainMenu)


CC_movscr_Cutscene:
    ondraw(0x9ff0) // NOP - Don't draw us
    asmcall(asm_CutsceneInit)
    mov_var(7,0)
    startloop(29) // 58px total / 2px per frame
        var_add(7,2) // Add 2px per frame
        mov_reg_var(7)
        asmcall(asm_write_letterbox_regs)
        mov_wait(1)
    endloop
    //asmcall (asm_Cutscene) // Turn on cutscene letterboxes
    asmcall (0xC020F1) // Delete entity
    mov_end

CC_movscr_Cutscene_Off:
    ondraw(0x9ff0) // NOP - Don't draw us
    mov_var(7,58)
    startloop(29) // 58px total / 2px per frame
        var_add(7,-2) // Add 2px per frame
        mov_reg_var(7)
        asmcall(asm_write_letterbox_regs)
        mov_wait(1)
    endloop
    asmcall (asm_CutsceneOff) // Turn on cutscene letterboxes
    asmcall (0xC020F1) // Delete entity
    mov_end

asm_CutsceneInit: {
    REP (0x30)
    LDA_i (0x0017) // Enable sprites, layer 1, layer 2, layer 3 outside letterboxed region
    STA_a (0xADAE)
    LDA_i (0x0004) // Enable layer 3 inside letterboxed region
    STA_a (0xADB0) 
    LDA_i (0x0000) // No letterboxing at first
    JSL   (asm_write_letterbox_regs)
    LDA_i (2)
    JSL   (0xC429E8) // Start letterbox HDMA on channel 2
    RTL
}
asm_write_letterbox_regs: {
    INC
    STA_a(0xadb2)
    DEC
    EOR_i(0xffff)
    SEC
    ADC_i(224)
    STA_a(0xadb4)
    JSL(0xc2d0ac) // Update HDMA table
    RTL
}
asm_CutsceneOff: {
    REP   (0x30)
    LDA_i (2)
    JSL   (0xC0AE34) // Disable HDMA channel 2
    RTL
}

TestDlg:
	cc_asmcall(CC_movscr_Cutscene, RET_NONE)
eob

TextSpeed:
	ConfirmNumber(lbl_Test, 1, "Set this text speed?", SetTxtSpeed)
goto(ModMenu_MainMenu)

SetTxtSpeed:
	settextspeed(0)
	window_open(1)
	"T-e-s-t-i-n-g" next
	window_close(1)
eob