/* ASM Hacks */
import "_scripts/asm/asm65816.ccs"
import "_scripts/asm/ASMRef.ccs"
import "_scripts/asm/asm_code.ccs"
import "_scripts/asm/asm_controls.ccs"
//import "_scripts/asm/bg_viewer.ccs"
/* EarthBound++ */
import "_scripts/asm/ebpp.ccs"
import "_scripts/asm/ebpp_std.ccs"
import "_scripts/asm/ebpp_mem.ccs"
import "_scripts/asm/EBPP_Disassembly_HardwareCompatible_v1_1.ccs"
import "_scripts/asm/general.ccs"
/* Quality of Life improvements from CCScript Library */
import "_scripts/asm/Title_Window.ccs"
import "_scripts/asm/name_fun.ccs"
import "_scripts/asm/noclip.ccs"
import "_scripts/asm/fast_doors.ccs"
import "_scripts/asm/run_button_toggleable.ccs"
import "_scripts/asm/repel_sandwiches.ccs"
import "_scripts/asm/run_accelerating.ccs"
import "_scripts/asm/GoodsMenuEquip.ccs"
/* Mod Menu */
import "_scripts/modmenu/menus/modmenu.ccs"
import "_scripts/modmenu/commands.ccs"
import "_scripts/modmenu/menus/goods/goodsmenu.ccs"
import "_scripts/modmenu/enums/flags.ccs"
import "_scripts/modmenu/enums/labels.ccs"
import "_scripts/modmenu/enums/windows.ccs"

// Open the Mod Menu
ModMenu:
	goto(ModMenu_MainMenu)
	
// Show information about the Mod Menu (item help text)
ModMenu_About:
	goto(ModMenu_AboutDlg)
	
// Temporarily remove party if using unrestricted bike feature
BicycleStart:
	if flg_UnrestrictBike 
	{
		party_add(1) 
		party_remove(2)  party_remove(3)  party_remove(4) 
		party_remove(5)  party_remove(6)  party_remove(7) 
		party_remove(8)  party_remove(9)  party_remove(10) 
		party_remove(11) party_remove(12) party_remove(13) 
		party_remove(14)
		window_open(wnd_FullScreen)
		window_closeall
		"[1F F0]"
	}
	else { "@The bike cannot be used right now." next }
eob

// Restore party if using unrestricted bike feature
BicycleEnd:
	if flg_UnrestrictBike 
	{
		if flg_Ness  { party_add(1) } if flg_Paula { party_add(2) } 
		if flg_Jeff  { party_add(3) } if flg_Poo   { party_add(4) } 
		if not flg_Ness { party_remove(1) } if not flg_Paula { party_remove(2) } 
		if not flg_Jeff { party_remove(3) } if not flg_Poo { party_remove(4) }
		window_open(wnd_FullScreen)
		window_closeall
	}
eob

// Prevent your dad from calling you
DadCall:
	if not flg_DadCantCall { goto(data_32.l_0xc7d33e_original) }
eob

// Prevent Photo Guy cutscene from happening
ROM[0xC7AB3F] = goto(PhotoGuy) // coilsnake didn't decompile it right...

command e(label) "{long label}"

PhotoGuy:
	if flg_NoPhotoGuy { "[1F 15 6A 00 C4 01 01]{music(88)}{music_stop}[1F EB 01 06][06 FD 01 {e(data_31.l_0xc7ac3a)}][1F 15 0E 00 C2 01 01]{pause(32)}[1F 61][1F 1F 0E 00 06][1F EC 01 01][1F EA 8F 00]{music_resume}" }
	else {
		call(data_33.l_0xc7dd74) "{music(88)}{pause(180)}{pause(60)}[1F 15 8F 00 C0 01 01][1F 61][1F 15 58 01 C1 01 01][1F 61][1F E7 8F 00][19 10 01][19 22 00 03 8F 00][1F 14 00]{window_open(1)}[1F 41 12]@Pictures taken instantaneously!" next
		"@I'm a photographic genius,{pause(15)}" linebreak
		"  if I do say so myself!" next
		"@Okay,{pause(15)} get ready for an instant memory!" next
		"@Look at the camera...{pause(20)}" linebreak
		"  Ready..." next
		"@Say,{pause(15)} <fuzzy pickles.>" next
		"{window_closeall}[1F EB 01 06][06 FD 01 {e(data_31.l_0xc7ac3a)}][1F 15 0E 00 C2 01 01]"
		goto(data_31.l_0xc7ac42)
	}
eob

// Replace "No problem here."
ROM[0xC7C59E] = goto(NewMenu)

SetCnt_1: counter(1) eob
SetCnt_2: counter(2) eob

NewMenu:
sound(6) // cancel out check sound with silence
window_close(wnd_Dialog) // close dialog window that opens by default
if flg_ModMenu or flg_KeyItems
{
	window_open(wnd_Action)
	Lbl(lbl_System)
	ResetCounter()
	ctoarg
	sound(SND_CURSORCONFIRM) // play open window sound
	if flg_KeyItems { MenuOptionWithCallback("Key Items", SetCnt_1) }
	if flg_ModMenu { MenuOptionWithCallback("Mod Menu", SetCnt_2) }
	DisplayVertical(1)
    if not "[11]" {
        // Exit
        eob
    }
	ctoarg
    swap
    SwitchGoto(6)
        SwitchCase(go_keyitems)
        SwitchCase(go_modmenu)
	swap
    "@Error! No option {number(0)} in this menu." next goto(GoodsMenu)
	go_keyitems:
		window_close(wnd_Action) goto(KeyItems)
	go_modmenu:
		window_close(wnd_Action) goto(ModMenu_MainMenu)
}
eob

SetCount1: { SetDescription(1, wnd_KeyItems, ShowDesc) } SetCount2: { SetDescription(2, wnd_KeyItems, ShowDesc) } 
SetCount3: { SetDescription(3, wnd_KeyItems, ShowDesc) } SetCount4: { SetDescription(4, wnd_KeyItems, ShowDesc) }
SetCount5: { SetDescription(5, wnd_KeyItems, ShowDesc) } SetCount6: { SetDescription(6, wnd_KeyItems, ShowDesc) } 
SetCount7: { SetDescription(7, wnd_KeyItems, ShowDesc) } SetCount8: { SetDescription(8, wnd_KeyItems, ShowDesc) }
SetCount9: { SetDescription(9, wnd_KeyItems, ShowDesc) } SetCount10: { SetDescription(10, wnd_KeyItems, ShowDesc) } 
SetCount11: { SetDescription(11, wnd_KeyItems, ShowDesc) } SetCount12: { SetDescription(12, wnd_KeyItems, ShowDesc) }
SetCount13: { SetDescription(13, wnd_KeyItems, ShowDesc) } SetCount14: { SetDescription(14, wnd_KeyItems, ShowDesc) } 
SetCount15: { SetDescription(15, wnd_KeyItems, ShowDesc) } SetCount16: { SetDescription(16, wnd_KeyItems, ShowDesc) }
SetCount17: { SetDescription(17, wnd_KeyItems, ShowDesc) }

KeyItems: {
	if flg_Ness { goto(NessKeyItems) }
	else if flg_Jeff { goto(JeffKeyItems) }
	else { eob }
}

NessKeyItems: {
	CloseAllModMenuWnd()
	OpenKeyItemWnd()
	Lbl(lbl_KeyItems)
	ResetCounter()
	ctoarg
	if flag flg_BuzzBuzzDead and not flag flg_Defeat_NessNightmare
	{
		MenuOptionWithCallback("Sound Stone", SetCount1)
	}
	MenuOptionWithCallback("ATM Card", SetCount2)
	if flag flg_KeyItem_ShackKey and not flag flg_OnettShackUnlocked
	{
		MenuOptionWithCallback("Shack Key", SetCount3)
	}
	if flag flg_KeyItem_Bicycle 
	{
		MenuOptionWithCallback("Bicycle", SetCount4)
	}
	if flag flg_KeyItem_ReceiverPhone 
	{
		MenuOptionWithCallback("Receiver Phone", SetCount5)
	}
	if flag flg_KeyItem_PencilEraser 
	{
		MenuOptionWithCallback("Pencil Eraser", SetCount6)
	}
	if flag flg_KeyItem_EraserEraser 
	{
		MenuOptionWithCallback("Eraser Eraser", SetCount7)
	}
	if flag flg_KeyItem_CabinKey and not flg_HappyHappyNotBlue
	{
		MenuOptionWithCallback("Cabin Key", SetCount8)
	}
	if flag flg_KeyItem_WadofBills and not flag flg_RunawayFiveTwosonDebtPaid
	{
		MenuOptionWithCallback("Wad of Bills", SetCount9)
	}
	if flag flg_KeyItem_ZombiePaper and not flag flg_ZombiePaperOnFloor and not flag flg_ZombiePaperUsed
	{
		MenuOptionWithCallback("Zombie Paper", SetCount10)
	}
	if flag flg_KeyItem_Diamond and not flag flg_Venus
	{
		MenuOptionWithCallback("Diamond", SetCount11)
	}
	if flag flg_KeyItem_SignedBanana and not flag flg_FoursideSewerOpen
	{
		MenuOptionWithCallback("Signed Banana", SetCount12)
	}
	if flag flg_KeyItem_CarrotKey and not flag flg_CarrotKeyUsed
	{
		MenuOptionWithCallback("Carrot Key", SetCount13)
	}
	if flag flg_KeyItem_DungeonManKey and not flag flg_DungeonManOpen
	{
		MenuOptionWithCallback("Tower Key", SetCount14)
	}
	if flag flg_KeyItem_ShynessBook and not flag flg_ShynessBookReturned
	{
		MenuOptionWithCallback("Shyness Book", SetCount15)
	}
	if flag flg_KeyItem_Meteorite and not flag flg_ZexonyteAndonuts
	{
		MenuOptionWithCallback("Meteorite Piece", SetCount16)
	}
    if flag flg_KeyItem_BadKeyMachine
	{
		MenuOptionWithCallback("Bad Key Machine", SetCount17)
	}
    DisplayVertical(2)
    if not "[11]" {
        // Exit
        eob
    }
    ctoarg
    swap
    SwitchGoto(17)
        SwitchCase(soundstone) SwitchCase(donothing) SwitchCase(donothing)
        SwitchCase(bike) SwitchCase(phone) SwitchCase(donothing)
		SwitchCase(donothing) SwitchCase(donothing) SwitchCase(donothing)
        SwitchCase(zombiepaper) SwitchCase(donothing) SwitchCase(donothing)
		SwitchCase(donothing) SwitchCase(donothing) SwitchCase(donothing)
        SwitchCase(donothing) SwitchCase(donothing)
    swap
    "@Error! No option {number(0)} in this menu." next goto(KeyItems)
	soundstone:
		call(data_55.l_0xc9fefd) goto(KeyItems)
	bike:
		goto(BicycleStart)
	phone:
		call(data_20.l_0xc68017) goto(KeyItems)
	zombiepaper:
		call(data_55.l_0xc9fc48) goto(KeyItems)
	donothing:
		goto(KeyItems)
}

JeffKeyItems: {
	CloseAllModMenuWnd()
	OpenKeyItemWnd()
	Lbl(lbl_KeyItems)
	ResetCounter()
	ctoarg
    if flg_KeyItem_BadKeyMachine
	{
		MenuOptionWithCallback("Bad Key Machine", SetCount17)
	}
	// Pack of bubble gum
    DisplayVertical(2)
    if not "[11]" {
        // Exit
        eob
    }
    ctoarg
    swap
    SwitchGoto(1)
        SwitchCase(donothing)
    swap
    "@Error! No option {number(0)} in this menu." next goto(KeyItems)
	donothing:
		goto(KeyItems)
}

ShowDesc:
	CloseKeyItemDescWnd()
	OpenKeyItemDescWnd()
	Lbl(lbl_Description)
	if counter_is(1) { //call(data_04.l_0xc55ad5) Sound Stone
		" <[1C 05 C4]>" newline "If you touch this to your forehead and concentrate on your thoughts," newline "Your Sanctuary melodies can be heard." eob
	}
	/*
	if counter_is(2) { call(data_04.l_0xc5566b) } // ATM Card
	if counter_is(3) { call(data_04.l_0xc554f6) } // Shack Key
	if counter_is(4) { call(data_04.l_0xc55627) } // Bicycle
	if counter_is(5) { call(data_04.l_0xc5570b) } // Receiver Phone
	if counter_is(6) { call(data_04.l_0xc55794) } // Pencil Eraser
	if counter_is(7) { call(data_04.l_0xc55e28) } // Eraser Eraser
	if counter_is(8) { call(data_04.l_0xc5551d) } // Cabin Key
	if counter_is(9) { call(data_04.l_0xc556e3) } // Wad of Bills
	if counter_is(10) { call(data_04.l_0xc555b8) } // Zombie Paper
	if counter_is(11) { call(data_04.l_0xc55740) } // Diamond
	if counter_is(12) { call(data_04.l_0xc5576a) } // Signed Banana
	if counter_is(13) { call(data_05.l_0xc5689f) } // Carrot Key
	if counter_is(14) { call(data_04.l_0xc55943) } // Tower Key
	if counter_is(15) { call(data_04.l_0xc55409) } // Shyness Book
	if counter_is(16) { call(data_04.l_0xc55957) } // Meteorite Piece
	if counter_is(17) { call(data_04.l_0xc55546) } // Bad Key Machine*/
eob